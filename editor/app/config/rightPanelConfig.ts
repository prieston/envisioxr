import { PanelConfiguration } from "../types/panelConfig";

export const createThreeJSRightPanelConfig = (
  selectedObject: any,
  selectedObservation: any,
  viewMode: string,
  controlSettings: any,
  updateObjectProperty: (id: string, property: string, value: any) => void,
  updateObservationPoint: (id: number, update: any) => void,
  deleteObservationPoint: (id: number) => void,
  setCapturingPOV: (val: boolean) => void,
  updateControlSettings: (update: any) => void,
  // Asset library props
  tabIndex: number,
  setTabIndex: (index: number) => void,
  userAssets: any[],
  deletingAssetId: string | null,
  handleDeleteModel: (assetId: string) => Promise<void>,
  handleModelSelect: (model: any) => void,
  selectingPosition: boolean,
  setSelectingPosition: (selecting: boolean) => void,
  selectedPosition: [number, number, number] | null,
  pendingModel: any,
  handleConfirmModelPlacement: () => void,
  handleCancelModelPlacement: () => void,
  previewUrl: string | null,
  setPreviewUrl: (url: string | null) => void,
  previewFile: File | null,
  setPreviewFile: (file: File | null) => void,
  screenshot: string | null,
  setScreenshot: (screenshot: string | null) => void,
  friendlyName: string,
  setFriendlyName: (name: string) => void,
  uploading: boolean,
  uploadProgress: number,
  isConfirmDisabled: boolean,
  handleConfirmUpload: () => void,
  getRootProps: any,
  getInputProps: any,
  metadata: any[],
  setMetadata: (metadata: any[]) => void,
  isObservationModel: boolean,
  onObservationModelChange: (isObservationModel: boolean) => void,
  observationProperties: any,
  onObservationPropertiesChange: (properties: any) => void
): PanelConfiguration => {
  return {
    id: "right-panel",
    name: "Right Panel",
    tabs: [
      {
        id: "properties",
        label: "Properties",
        settings: [
          {
            id: "properties-panel",
            type: "custom",
            label: "Properties",
            customComponent: "PropertiesPanel",
            customProps: {
              selectedObject,
              selectedObservation,
              viewMode,
              controlSettings,
              updateObjectProperty,
              updateObservationPoint,
              deleteObservationPoint,
              setCapturingPOV,
              updateControlSettings,
            },
          },
        ],
      },
      {
        id: "assets",
        label: "Assets",
        settings: [
          {
            id: "asset-library-panel",
            type: "custom",
            label: "Asset Library",
            customComponent: "AssetLibraryPanel",
            customProps: {
              tabIndex,
              setTabIndex,
              userAssets,
              deletingAssetId,
              handleDeleteModel,
              handleModelSelect,
              selectingPosition,
              setSelectingPosition,
              selectedPosition,
              pendingModel,
              handleConfirmModelPlacement,
              handleCancelModelPlacement,
              previewUrl,
              setPreviewUrl,
              previewFile,
              setPreviewFile,
              screenshot,
              setScreenshot,
              friendlyName,
              setFriendlyName,
              uploading,
              uploadProgress,
              isConfirmDisabled,
              handleConfirmUpload,
              getRootProps,
              getInputProps,
              metadata,
              setMetadata,
              isObservationModel,
              onObservationModelChange,
              observationProperties,
              onObservationPropertiesChange,
            },
          },
        ],
      },
    ],
  };
};

export const createCesiumRightPanelConfig = (
  selectedObject: any,
  selectedObservation: any,
  viewMode: string,
  controlSettings: any,
  updateObjectProperty: (id: string, property: string, value: any) => void,
  updateObservationPoint: (id: number, update: any) => void,
  deleteObservationPoint: (id: number) => void,
  setCapturingPOV: (val: boolean) => void,
  updateControlSettings: (update: any) => void,
  // Asset library props
  tabIndex: number,
  setTabIndex: (index: number) => void,
  userAssets: any[],
  deletingAssetId: string | null,
  handleDeleteModel: (assetId: string) => Promise<void>,
  handleModelSelect: (model: any) => void,
  selectingPosition: boolean,
  setSelectingPosition: (selecting: boolean) => void,
  selectedPosition: [number, number, number] | null,
  pendingModel: any,
  handleConfirmModelPlacement: () => void,
  handleCancelModelPlacement: () => void,
  previewUrl: string | null,
  setPreviewUrl: (url: string | null) => void,
  previewFile: File | null,
  setPreviewFile: (file: File | null) => void,
  screenshot: string | null,
  setScreenshot: (screenshot: string | null) => void,
  friendlyName: string,
  setFriendlyName: (name: string) => void,
  uploading: boolean,
  uploadProgress: number,
  isConfirmDisabled: boolean,
  handleConfirmUpload: () => void,
  getRootProps: any,
  getInputProps: any,
  metadata: any[],
  setMetadata: (metadata: any[]) => void,
  isObservationModel: boolean,
  onObservationModelChange: (isObservationModel: boolean) => void,
  observationProperties: any,
  onObservationPropertiesChange: (properties: any) => void
): PanelConfiguration => {
  return {
    id: "right-panel",
    name: "Right Panel",
    tabs: [
      {
        id: "properties",
        label: "Properties",
        settings: [
          {
            id: "properties-panel",
            type: "custom",
            label: "Properties",
            customComponent: "PropertiesPanel",
            customProps: {
              selectedObject,
              selectedObservation,
              viewMode,
              controlSettings,
              updateObjectProperty,
              updateObservationPoint,
              deleteObservationPoint,
              setCapturingPOV,
              updateControlSettings,
            },
          },
        ],
      },
      {
        id: "assets",
        label: "Assets",
        settings: [
          {
            id: "asset-library-panel",
            type: "custom",
            label: "Asset Library",
            customComponent: "AssetLibraryPanel",
            customProps: {
              tabIndex,
              setTabIndex,
              userAssets,
              deletingAssetId,
              handleDeleteModel,
              handleModelSelect,
              selectingPosition,
              setSelectingPosition,
              selectedPosition,
              pendingModel,
              handleConfirmModelPlacement,
              handleCancelModelPlacement,
              previewUrl,
              setPreviewUrl,
              previewFile,
              setPreviewFile,
              screenshot,
              setScreenshot,
              friendlyName,
              setFriendlyName,
              uploading,
              uploadProgress,
              isConfirmDisabled,
              handleConfirmUpload,
              getRootProps,
              getInputProps,
              metadata,
              setMetadata,
              isObservationModel,
              onObservationModelChange,
              observationProperties,
              onObservationPropertiesChange,
            },
          },
        ],
      },
    ],
  };
};
